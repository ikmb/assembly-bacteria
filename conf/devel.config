
// Job paramaters to set for this environment

params.outdir = "output" 
params.spades = "/ifs/data/nfs_share/ikmb_repository/software/centos7/spades/3.9.0/bin/spades.py"
params.prokka = "/ifs/data/nfs_share/ikmb_repository/software/centos7/prokka/1.11/bin/prokka"
params.picard = "/ifs/data/nfs_share/ikmb_repository/software/centos7/picard/2.9.2/picard.jar"
params.samtools = "/ifs/data/nfs_share/ikmb_repository/software/centos7/samtools/1.3/bin/samtools"
params.bwa = "/ifs/data/nfs_share/ikmb_repository/software/centos7/bwa/0.7.15/bwa"
params.trimgalore = "/ifs/data/nfs_share/ikmb_repository/software/centos7/trimgalore/0.4.4/trim_galore"
params.reference = false

params.resfinder_db = "/ifs/data/nfs_share/ikmb_repository/databases/resfinder/12-2017"

params.centre = "IKMB"

// Resource manager settings

executor {
  name="slurm"
  queueSize=50
}

// Process setting

process {

  // Global cluster parameters
  executor = 'slurm'
  queue = 'ikmb_new'
  clusterOptions = { '--qos=ikmb_a' }
  memory = { 8.GB * task.attempt }
  cpus = { 1 * task.attempt }
  time = { 2.h * task.attempt }
  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  // Specific cluster parameters for each process

  $runTrimgalore {
	module = [ 'Devel', 'Java/1.8.0', 'Fastqc/0.11.5', 'Cutadapt/1.10.1', 'Trimgalore/0.4.4']
	cpus = 4
	time = { 2.h * task.attempt }
  }

  $runSpades {

    module = [ 'Spades/3.9.0' ]
    cpus = 16
    memory = { 64.GB * task.attempt }
    time = { 4.h * task.attempt }

  }

  $runProkka {

    module = [ 'Prokka/1.12', 'Perl/5.18.5' ]
    cpus = 16
    times = { 2.h * task.attempt }

  }

  $runResfinder {
    module = [ 'Perl/5.18.5', 'Blast/2.2.26', 'Bioperl/1.6.922', 'Resfinder/current']
  }

  $runBwa {
    
    module = [ 'Bwa/0.7.15', 'Samtools/1.3' ]
    cpus = 8
    memory = "16GB"
   
  }

  $runMarkDuplicates {

    module = [ 'Java/1.8.0' ]
    memory = { 16.GB * task.attempt }

  }

  $runMultiQCSample {

   module = [ 'Python/2.7.10' , 'MultiQC/1.4']

  }

  $runMultiQCProkka {

   module = [ 'Python/2.7.10' , 'MultiQC/1.4']

  }

  $runMultiQCLibrary {

    module = [ 'Python/2.7.10', 'MultiQC/1.4' ]
  }
}
